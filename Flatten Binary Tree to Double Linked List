class TreeNode{
	int val;
	TreeNode left;
	TreeNode right;
	//TreeNode next;
	TreeNode head;
	//TreeNode pre;
	public TreeNode(int val){
		this.val = val;
		left = null;
		right = null;
		//next = null;
		head = null;
		//pre = null;
	}
}
public class solution 
{	
	public static TreeNode dfs(TreeNode root)
	{	
		if(root != null)
		{
			TreeNode lefthead = dfs(root.left);
			TreeNode righthead = dfs(root.right);
			TreeNode temp = null;
			if(lefthead != null)
			{
				temp = lefthead;
				while(temp.right != null)
				{
					temp = temp.right;
				}
				temp.right = root;
				root.left = temp;
			}else
				lefthead = root;
			
			if(righthead != null)
			{
				root.right = righthead;
				righthead.left = root;
			}else
				righthead = root;
			return lefthead;
		}
		return null;
	}
	static TreeNode dummy = new TreeNode(-1);
	static TreeNode prev = dummy;
	public static TreeNode find(TreeNode root){
		dfs2(root);
		return dummy.right;
	}
	
	public static void dfs2(TreeNode root){
		if(root == null){return ;}
		dfs2(root.left);
		prev.right = root;
		root.left = prev;
		prev = prev.right;
		dfs2(root.right);
	}
	public static void main(String[] args){
		TreeNode root = new TreeNode(4);
		root.left = new TreeNode(3);
		root.left.left = new TreeNode(1);
		root.left.right = new TreeNode(2);
		root.right = new TreeNode(6);
		root.right.right = new TreeNode(7);
		root.right.left = new TreeNode(5);
		TreeNode head = dfs(root);
		//TreeNode head = find(root);
		while(head != null){
			System.out.print(head.val);
			head = head.right;
		}
		
	}

}
